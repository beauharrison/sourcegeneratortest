using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace CodeGen
{
    public class CodeGenNamespace : ICodeGenElement
    {
        public CodeGenNamespace(string name)
        {
            if (string.IsNullOrWhiteSpace(name)) throw new System.ArgumentException(nameof(name));

            Name = name;
        }

        public string Name { get; }

        public List<string> Usings { get; } = new List<string>();

        public List<ICodeGenElement> Content { get; } = new List<ICodeGenElement>();

        public string GenerateCode(CodeGenStyle style = null)
        {
            if (style == null) style = new CodeGenStyle();

            var builder = new StringBuilder();

            foreach (var @using in Usings)
            {
                builder.AppendLine($"{style.Indent}using {@using};");
            }

            if (Usings.Any()) builder.AppendLine();

            builder.AppendLine($"{style.Indent}/// <auto-generated />");

            builder.AppendLine($"{style.Indent}namespace {Name}");
            builder.AppendLine($"{style.Indent}{{");
            style.IndentCount++;

            foreach (var content in Content)
            {
                builder.AppendLine(content.GenerateCode(style));
                builder.AppendLine();
            }

            style.IndentCount--;
            builder.AppendLine($"{style.Indent}}}");

            return builder.ToString();
        }
    }
}
